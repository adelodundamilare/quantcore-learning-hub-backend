"""add stock option module

Revision ID: dc3c12001bd2
Revises: 34f064a176cb
Create Date: 2025-10-30 09:29:39.542660

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dc3c12001bd2'
down_revision: Union[str, None] = '34f064a176cb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stock_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_categories_id'), 'stock_categories', ['id'], unique=False)
    op.create_index(op.f('ix_stock_categories_name'), 'stock_categories', ['name'], unique=True)

    op.create_table('stock_category_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['stock_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_category_items_id'), 'stock_category_items', ['id'], unique=False)
    op.create_index(op.f('ix_stock_category_items_symbol'), 'stock_category_items', ['symbol'], unique=False)

    stock_categories = {
        "Tech Stocks": ["AAPL", "MSFT", "GOOGL", "META", "NVDA", "AMD", "INTC"],
        "Defense ETFs": ["MSTX", "ITA", "XAR", "PPA", "DFEN"],
        "Energy": ["XLE", "XOP", "OIH", "XOM", "CVX", "COP"],
        "Financial Services": ["JPM", "BAC", "WFC", "GS", "MS", "C", "V", "MA"],
        "Healthcare": ["JNJ", "UNH", "PFE", "ABBV", "TMO", "MRK", "LLY"],
        "Consumer Goods": ["PG", "KO", "PEP", "WMT", "COST", "TGT", "HD"],
        "Electric Vehicles": ["TSLA", "RIVN", "LCID", "NIO", "XPEV", "LI"],
        "Semiconductors": ["NVDA", "AMD", "INTC", "TSM", "QCOM", "AVGO", "MU"],
        "E-commerce": ["AMZN", "SHOP", "EBAY", "ETSY", "SE", "MELI"],
        "Streaming & Media": ["NFLX", "DIS", "PARA", "WBD", "SPOT", "ROKU"],
        "Cloud Computing": ["MSFT", "AMZN", "GOOGL", "CRM", "ORCL", "SNOW"],
        "Banking": ["JPM", "BAC", "WFC", "C", "USB", "PNC", "TFC"],
        "Real Estate ETFs": ["VNQ", "XLRE", "IYR", "SCHH", "RWR"],
        "Aerospace": ["BA", "LMT", "RTX", "NOC", "GD", "TXT", "HWM"],
        "Pharmaceuticals": ["PFE", "JNJ", "MRK", "LLY", "ABBV", "BMY", "GILD"]
    }

    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)

    for category_name, symbols in stock_categories.items():
        category = sa.Table(
            'stock_categories',
            sa.MetaData(),
            sa.Column('id', sa.Integer, primary_key=True),
            sa.Column('name', sa.String),
        )
        result = session.execute(category.insert().values(name=category_name).returning(category.c.id))
        category_id = result.scalar_one()

        stock_category_item = sa.Table(
            'stock_category_items',
            sa.MetaData(),
            sa.Column('id', sa.Integer, primary_key=True),
            sa.Column('symbol', sa.String),
            sa.Column('category_id', sa.Integer),
        )
        for symbol in symbols:
            session.execute(stock_category_item.insert().values(symbol=symbol, category_id=category_id))
    session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)

    session.execute(sa.text("DELETE FROM stock_category_items"))
    session.execute(sa.text("DELETE FROM stock_categories"))
    session.commit()

    op.drop_index(op.f('ix_stock_category_items_symbol'), table_name='stock_category_items')
    op.drop_index(op.f('ix_stock_category_items_id'), table_name='stock_category_items')
    op.drop_table('stock_category_items')

    op.drop_index(op.f('ix_stock_categories_name'), table_name='stock_categories')
    op.drop_index(op.f('ix_stock_categories_id'), table_name='stock_categories')
    op.drop_table('stock_categories')
